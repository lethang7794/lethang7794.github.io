---
import { Icon } from 'astro-icon/components';
import Section from "../Section.astro"
import { work } from "@cv"

import { SKILLS_ICONS } from "@/constants/skill-icons";
---
<Section className={Astro.props.className} title="Experience">
  <ul class="flex flex-col">
    {work.map(({ company, startDate, endDate, position, summary, responsibilities, achievements, url, skills, location, location_type }) => {
      const start = new Date(startDate)
      const startYear = start.getFullYear()
      const startMonth = start.toLocaleString('en-US', { month: 'short' });
      const end = new Date(endDate)
      const endYear = endDate != null ? end.getFullYear() : "Present"
      const endMonth = end.toLocaleString('en-US', { month: 'short' });

      return (
        <li class="relative print:py-2">
          <div class="group relative grid pb-1 print:pb-0 transition-all print:grid-cols-1 print:gap-1 md:grid-cols-12 md:gap-4 lg:hover:!opacity-100 ">
            
            <div class="order-2 md:order-1 relative flex flex-col pb-6 print:pb-0 before:-ml-4 md:before:-ml-6 md:col-span-9 md:-mr-6 before:w-px print:before:hidden before:absolute before:bg-skin-muted before:h-full before:mt-2">
              <div class="absolute w-2 h-2 bg-skin-hue rounded-full mt-2 -translate-x-[1.2rem] md:-translate-x-[1.71rem] ring print:hidden ring-skin-fill"></div>
              <h3>
                <div class="inline-flex items-center text-lg print:text-base leading-tight group/link focus-visible:text-amber-500" aria-label="{position} - {company}">
                  <span class="font-bold">{position} <span class="font-normal">@</span> 
                  {url ? (
                    <a class="text-skin-hue" href={url} title={`Ver ${company}`} target="_blank">{company}</a>
                  ) : (
                    <span class="font-normal">{company}</span>
                  )}
                  {url &&
                    <span class="inline-block text-skin-hue print:[&>svg]:hidden">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="inline-block w-4 h-4 ml-1 transition-transform translate-y-px shrink-0 group-hover/link:-translate-y-1 group-hover/link:translate-x-1 group-focus-visible/link:-translate-y-1 group-focus-visible/link:translate-x-1 motion-reduce:transition-none" aria-hidden="true">
                        <path fill-rule="evenodd" d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z" clip-rule="evenodd"></path>
                      </svg>
                    </span>
                  }
                  </span>
                </div>
              </h3>
              {(location || location_type) && (
                <div class="text-xs text-skin-muted">
                  {location} {location && location_type && '-'} {location_type}
                </div>
              )}
              <div class="mt-4  print:gap-0 flex flex-col gap-4 print:text-xs text-sm" x-data="{ expanded: false }">
                {summary && (
                  <div class="flex flex-col gap-1">
                    <h4>Summary:</h4>
                    <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                      {Array.isArray(summary) ? (
                        summary.map(item => (
                          {item}
                        ))
                      ) : (
                        <li>{summary}</li>
                      )}
                    </ul>
                  </div>
                )}

                {(responsibilities || achievements) && (
                  <div class="flex relative flex-col print:!h-auto gap-4 print:gap-2 after:bg-gradient-to-t after:absolute after:bottom-0 after:w-full print:after:hidden after:h-16 after:content-[''] after:from-skin-hue dark:after:to-skin-hue/0" :class="expanded ? 'after:hidden' : ''" x-show="expanded" x-collapse.min.72px>
                    {responsibilities && responsibilities?.length > 0 && (
                      <div class="flex flex-col gap-1">
                        <h4>Responsibilities:</h4>
                        <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                          {responsibilities.map(responsibility => (
                            <li>{responsibility}</li>
                          ))}
                        </ul>
                      </div>
                    )}

                    {achievements && (
                      <div class="flex flex-col gap-1">
                        <h4>Achievements:</h4>
                        <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                          {achievements.map(achievement => (
                            <li>{achievement}</li>
                          ))}
                        </ul>
                      </div>
                    )}
                  </div>
                  
                  <button @click="expanded = ! expanded" class="print:hidden group/more w-fit cursor-pointer items-center justify-center gap-1.5 text-xs underline text-skin-muted transition-all hover:text-skin-base flex">
                    <span x-text="expanded ? 'Show less' : 'Show more'">Show more</span>
                    <svg class="w-4 h-4 group-hover/more:translate-y-0.5 duration-200 ease-out" :class="{ 'rotate-180': expanded }" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
                  </button>

                  <ul class="flex print:hidden flex-wrap gap-2" aria-label="Technologies used">
                    {
                      skills && skills.map(skill => {
                        let skillName = skill?.replace(/ \(.*\)/, "")
                        const icon = SKILLS_ICONS[skillName]
                        const iconName = icon?.iconName || ''
                        return (
                          <li class="bg-skin-button-accent/20 bg-transparent border-skin-hue/30 text-skin-hue/80 print:p-0 print:bg-transparent print:text-zinc-800 flex gap-1 items-center border-solid print:border-none border rounded-md px-2 py-0.5 text-xs">
                            {iconName && <Icon name={iconName} />} <span>{skill}</span>
                          </li>
                        )}
                      )
                    }
                  </ul>
                )}
              </div>
            </div>

            <header class="relative mt-1 text-xs text-skin-muted md:col-span-3 md:pl-6 order-1 md:order-2 text-start md:text-end">
              <time datetime={startDate} data-title={startDate} class="whitespace-nowrap"><span class="font-normal">{startMonth} {startYear}</span></time> - <time datetime={endDate} data-title={endDate}><span class="font-normal">{endMonth}</span> {endYear}</time>
            </header>

          </div>
        </li>
      )
    })}
  </ul>  
</Section>
<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"></script>
<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<style>
  li::marker {
    @apply text-skin-hue
  }
</style>