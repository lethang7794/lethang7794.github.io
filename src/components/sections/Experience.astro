---
import { Icon } from "astro-icon/components";
import Section from "../Section.astro";
import { work } from "@cv";

import { SKILLS_ICONS } from "@/constants/skill-icons";
import Markdown from "../Markdown.astro";
---

<Section className={Astro.props.className} title="Experience">
	<ul class="flex flex-col print:list-disc">
		{
			work.map(
				({
					company,
					startDate,
					endDate,
					position,
					summary: s,
					summary_md: s_md,
					responsibilities: r,
					responsibilities_md: r_md,
					achievements: a,
					achievements_md: a_md,
					url,
					skills,
					location,
					location_type,
				}) => {
					const start = new Date(startDate);
					const startYear = start.getFullYear();
					const startMonth = start.toLocaleString("en-US", { month: "short" });
					const end = new Date(endDate);
					const endYear = endDate != null ? end.getFullYear() : "Present";
					const endMonth = end.toLocaleString("en-US", { month: "short" });

					const id = encodeURI(position);

					const summary = s_md || s
					const responsibilities = r_md || r
					const achievements = a_md || a

					return (
						<li class="relative print:pb-4 print:pt-2">
							<div class="group relative grid pb-1 transition-all md:grid-cols-12 md:gap-4 lg:hover:!opacity-100 print:grid-cols-1 print:gap-1 print:pb-0">
								<div class="relative order-2 flex flex-col pb-4 before:absolute before:-ml-4 before:mt-2 before:h-full before:w-px before:bg-skin-muted md:order-1 md:col-span-9 md:-mr-6 md:before:-ml-6 lg:pb-8 print:order-2 print:col-span-12 print:ml-0 print:mr-0 print:pb-0 print:before:hidden">
									<div class="absolute mt-2 h-2 w-2 -translate-x-[1.2rem] rounded-full bg-skin-hue ring ring-skin-fill md:-translate-x-[1.71rem] print:hidden" />
									<h3>
										<div
											class="group/link flex items-center text-lg leading-tight focus-visible:text-amber-500 print:justify-between print:text-base"
											aria-label="{position} - {company}"
										>
											<a href={"#" + id}>
												<span id={id}>
													<span class="font-normal text-skin-hue">{position}</span>
													<span class="font-normal text-skin-base print:dark:text-black/60">@</span>
													{url ? (
														<a
															class="text-skin-hue"
															href={url}
															title={`Ver ${company}`}
															target="_blank"
															tabindex="-1"
														>
															{company}
														</a>
													) : (
														<span class="font-normal italic text-skin-base print:dark:text-black/60">{company}</span>
													)}
													{url && (
														<span class="inline-block text-skin-hue print:[&>svg]:hidden">
															<svg
																xmlns="http://www.w3.org/2000/svg"
																viewBox="0 0 20 20"
																fill="currentColor"
																class="ml-1 inline-block h-4 w-4 shrink-0 translate-y-px transition-transform group-hover/link:-translate-y-1 group-hover/link:translate-x-1 group-focus-visible/link:-translate-y-1 group-focus-visible/link:translate-x-1 motion-reduce:transition-none"
																aria-hidden="true"
															>
																<path
																	fill-rule="evenodd"
																	d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z"
																	clip-rule="evenodd"
																/>
															</svg>
														</span>
													)}
												</span>
											</a>
											<header class="relative order-1 mt-1 hidden text-start text-xs text-skin-muted md:order-2 md:col-span-3 md:pl-6 md:text-end print:order-1 print:block print:pl-0 print:text-start">
												<time
													datetime={startDate}
													data-title={startDate}
													class="whitespace-nowrap"
												>
													<span class="font-normal">
														{startMonth} {startYear}
													</span>
												</time>{" "}
												- 
												<time datetime={endDate} data-title={endDate}>
													<span class="font-normal">{endMonth}</span> {endYear}
												</time>
											</header>
										</div>
									</h3>
									{(location || location_type) && (
										<div class="text-xs text-skin-muted">
											{location} {location && location_type && "-"}{" "}
											{location_type}
										</div>
									)}
									<div
										class="mt-4 flex flex-col gap-4 text-sm print:mt-2 print:gap-0 print:text-xs"
										x-data="{ expanded: false }"
									>
										{summary && (
											<div class="flex flex-col gap-1">
												<h4 class="text-skin-base print:dark:text-black/60">Summary:</h4>
												<ul class="flex list-disc flex-col gap-2 text-skin-muted [&>li]:ml-4">
													{Array.isArray(summary) ? (
														summary.map((item) => ({ item }))
													) : (
														<li><Markdown inline of={summary} /></li>
													)}
												</ul>
											</div>
										)}

										{(responsibilities || achievements) && (
                      <div class="flex relative flex-col print:!h-auto gap-4 print:mt-2 print:gap-2 after:bg-gradient-to-t after:absolute after:bottom-0 after:w-full print:after:hidden after:h-16 after:content-[''] after:from-skin-hue dark:after:to-skin-hue/0" :class="expanded ? 'after:hidden' : ''" x-show="expanded" x-collapse.min.72px>
                        {responsibilities && responsibilities?.length > 0 && (
                          <div class="flex flex-col gap-1">
                            <h4 class="text-skin-base print:dark:text-black/60">Responsibilities:</h4>
                            <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                              {responsibilities.map(responsibility => (
                                <li><Markdown inline of={responsibility} /></li>
                              ))}
                            </ul>
                          </div>
                        )}

                        {achievements && (
                          <div class="flex flex-col gap-1">
                            <h4 class="text-skin-base print:dark:text-black/60">Achievements:</h4>
                            <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                              {achievements.map(achievement => (
                                <li><Markdown inline of={achievement} /></li>
                              ))}
                            </ul>
                          </div>
                        )}
                      </div>
                  
                    <button @click="expanded = ! expanded" class="ml-auto -mt-3 print:hidden group/more w-fit cursor-pointer items-center justify-center gap-1.5 text-xs underline text-skin-muted transition-all hover:text-skin-base flex">
                      <span x-text="expanded ? 'Show less' : 'Show more'">Show more</span>
                      <svg class="w-4 h-4 group-hover/more:translate-y-0.5 duration-200 ease-out" :class="{ 'rotate-180': expanded }" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
                    </button>

                    <ul class="flex print:hidden flex-wrap gap-2 mb-2" aria-label="Technologies used">
                      {
                        skills && skills.map(skill => {
                          let skillName = skill?.replace(/ \(.*\)/, "")
                          const icon = SKILLS_ICONS[skillName]
                          const iconName = icon?.iconName || ''
                          return (
                            <li class="bg-transparent border-skin-hue/30 text-skin-hue/80 print:p-0 print:bg-transparent print:text-zinc-800 flex gap-1 items-center border-solid print:border-none border rounded-md px-2 py-0.5 text-xs">
                              {iconName && <Icon name={iconName} />} <span>{skill}</span>
                            </li>
                          )}
                        )
                      }
                    </ul>
                    )}
									</div>
								</div>

								<header class="relative order-1 mt-1 text-start text-xs text-skin-muted md:order-2 md:col-span-3 md:pl-6 md:text-end print:order-1 print:hidden print:pl-0 print:text-start">
									<time
										datetime={startDate}
										data-title={startDate}
										class="whitespace-nowrap"
									>
										<span class="font-normal">
											{startMonth} {startYear}
										</span>
									</time>{" "}
									- 
									<time datetime={endDate} data-title={endDate}>
										<span class="font-normal">{endMonth}</span> {endYear}
									</time>
								</header>
							</div>
						</li>
					);
				}
			)
		}
	</ul>
</Section>
<script
	defer
	src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"
></script>
<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"
></script>

<style>
	li::marker {
		@apply text-skin-hue;
	}
</style>
