---
import { Icon } from "astro-icon/components";
import Section from "../Section.astro";
import { education } from "@cv";
---

<Section className={Astro.props.className} title="Education">
	<ul class="space-y-4 pb-4 pt-0 print:space-y-0 print:pt-0">
		{
			education.map(
				({
					institution,
					startDate,
					endDate,
					area,
					url,
					iconName,
					highlights,
					studyType,
				}) => {
					const start = new Date(startDate);
					const startYear = start.getFullYear();
					const startMonth = start.toLocaleString("en-US", { month: "short" });
					const end = new Date(endDate);
					const endYear = endDate != null ? end.getFullYear() : "Present";
					const endMonth = end.toLocaleString("en-US", { month: "short" });
					const years = `${startYear} ${startMonth} - ${endYear} ${endMonth}`;

					return (
						<div class="flex flex-col items-baseline lg:flex-row">
							<div class="relative mt-2 flex w-full items-baseline gap-2 print:mt-0 print:pb-4 print:pt-0">
								<Icon
									name={iconName || "mdi:university-outline"}
									class="hidden h-6 w-6 shrink-0 self-start md:inline print:hidden"
								/>
								<div class="w-full">
									<h3 class="mb-0.5 mr-6 flex-grow items-baseline gap-x-2 gap-y-0.5 font-semibold print:mt-2">
										{url ? (
											<a
												target="_blank"
												class="group flex items-center gap-[6px] decoration-dotted underline-offset-[5px] hover:text-skin-hue hover:underline"
												href={url}
											>
												{institution}
											</a>
										) : (
											<span class="group flex items-center gap-[6px] decoration-dotted underline-offset-[5px] hover:text-skin-hue hover:underline">
												{institution}
											</span>
										)}
									</h3>
									<div class="flex w-full items-baseline justify-between">
										<div class="mb-1 text-sm font-semibold italic text-skin-muted">
											{area}
											{studyType ? (
												<span class="font-normal not-italic">
													{" "}
													â€¢ {studyType}
												</span>
											) : null}
										</div>

										<time class="whitespace-nowrap text-xs text-skin-muted md:block md:pl-8 lg:pl-0 print:pl-0">
											{years}
										</time>
									</div>
									<ul class="flex list-disc flex-col gap-2 text-sm text-skin-muted print:mt-2 print:pr-32 [&>li]:ml-4">
										{Array.isArray(highlights) ? (
											highlights.map((item) => <li>{item}</li>)
										) : (
											<li>{highlights}</li>
										)}
									</ul>
								</div>
							</div>
						</div>
					);
				},
			)
		}
	</ul>
</Section>

<style>
	li::marker {
		@apply text-skin-hue;
	}
</style>
