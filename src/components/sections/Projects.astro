---
import { Icon } from "astro-icon/components";
import Arrow from "@/icons/Arrow.astro";
import Section from "../Section.astro";

import { projects } from "@cv";
import { basics } from "@cv";
import { SOCIALS } from "@/constants/social-names";
import { SKILLS_ICONS } from "@/constants/skill-icons";

const { profiles } = basics;
const githubInfo = profiles.find(
	({ network }) => network.toLowerCase() === SOCIALS.GitHub
);
const githubUrl = githubInfo?.projects || githubInfo?.url;
---

<Section className={Astro.props.className} title="Projects">
	<div
		class="mt-2 grid grid-cols-1 gap-3 md:grid-cols-2 print:flex print:list-disc print:flex-col print:gap-4 print:pb-4"
	>
		{
			projects
				.filter((item) => !item.hidden)
				.map(
					({
						url,
						description,
						highlights,
						name,
						isActive,
						github,
						icon,
						skills,
					}) => {
						return (
							<div
								role="contentinfo"
								class="grid-span-1 relative flex flex-col rounded-md border-[1px] border-solid border-skin-hue/50 bg-skin-hue/5 p-5 shadow-sm marker:text-skin-hue print:list-item print:border-0 print:bg-transparent print:p-0 print:shadow-none"
							>
								<div class="flex items-center justify-between space-x-[10px]">
									<div class="flex items-center gap-2">
										<div class="icon print:hidden">
											{icon ? (
												isActive ? (
													<a
														href={url}
														title={`View ${name} project`}
														target="_blank"
														tabindex="-1"
													>
														<Icon name={icon} height="2em" width="4em" />
													</a>
												) : (
													<Icon name={icon} height="2em" width="4em" />
												)
											) : (
												<Icon name="lucide:folder-code" />
											)}
										</div>
										<div class="flex items-center gap-[6px]">
											{isActive ? (
												<a
													class="group flex items-center gap-[6px] text-lg font-normal decoration-dotted underline-offset-[5px] hover:text-skin-hue hover:underline"
													href={url}
													title={`View ${name} project`}
													target="_blank"
												>
													<span class="text-skin-hue">{name}</span>
													<span class="text-skin-hue transition ease-linear group-hover:-translate-y-0.5 group-hover:translate-x-0.5 print:hidden">
														<Arrow />
													</span>
													<span class="hidden text-xs text-skin-muted print:block">
														{url}
													</span>
												</a>
											) : (
												<span class="text-skin-hue">{name}</span>
											)}
										</div>
									</div>

									{github && (
										<a
											href={github}
											title="View source code in repository on GitHub"
											target="_blank"
											rel="noopener"
											class="opacity-75 transition-opacity duration-100 hover:opacity-100 print:hidden"
											tabindex="-1"
										>
											<Icon name="mdi:code-braces" />
										</a>
									)}
								</div>

								<p class="mt-1 text-sm text-skin-base print:mb-1 print:mt-0 print:dark:text-black/60">
									{description}
								</p>
								{highlights ? (
									<ul class="mt-1 text-xs text-skin-muted print:mt-0">
										{highlights.map((highlight) => {
											return <li>{highlight}</li>;
										})}
									</ul>
								) : null}

								{skills ? (
									<>
										<div class="mt-3 flex flex-wrap gap-2 print:mt-1 print:justify-start">
											{skills?.map((skill) => {
												let skillName = skill?.replace(/ \(.*\)/, "");
												const icon = SKILLS_ICONS[skillName];
												const iconName = icon?.iconName || "";
												return (
													<div class="flex items-center gap-1 rounded-md border border-solid border-skin-hue/30 bg-transparent px-2 py-0.5 text-sm leading-[14px] text-skin-muted print:border-none print:bg-transparent print:p-0 print:text-skin-muted">
														{iconName && (
															<Icon
																name={icon?.iconName}
																class="print:hidden"
															/>
														)}
														<span class="print:hidden">{skill}</span>
													</div>
												);
											})}
										</div>
									</>
								) : null}
							</div>
						);
					}
				)
		}
		<div
			role="contentinfo"
			class="grid-span-1 relative flex flex-col rounded-md bg-skin-hue/5 p-5 shadow-sm ring-1 ring-skin-muted print:hidden"
		>
			<a
				class="group flex h-full items-center justify-center gap-[6px] text-base decoration-dotted underline-offset-[5px] hover:text-skin-hue hover:underline"
				href={githubUrl}
				title={`View other projects`}
				target="_blank"
			>
				<div
					class="flex h-full items-center justify-center gap-2 text-skin-muted"
				>
					Other projects
					<span
						class="text-skin-hue transition ease-linear group-hover:-translate-y-0.5 group-hover:translate-x-0.5"
					>
						<Arrow />
					</span>
				</div>
			</a>
		</div>
	</div>
</Section>

<style>
	ul {
		@apply ml-4 list-disc space-y-1;
		li {
			@apply text-skin-muted;
		}
	}

	footer {
		display: flex;
		flex-wrap: wrap;
		gap: 4px;
		font-size: 0.6rem;
	}

	footer span {
		border-radius: 6px;
		background: #eee;
		color: #444;
		font-size: 0.6rem;
		font-weight: 500;
		padding: 0.2rem 0.6rem;
	}
	@keyframes flicker {
		0% {
			opacity: 1;
		}
		50% {
			opacity: 0.25;
		}
		100% {
			opacity: 1;
		}
	}
</style>
